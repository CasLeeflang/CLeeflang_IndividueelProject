@model Logic.BusinessUser.BusinessUserModel

@{
    ViewData["Title"] = "EditBusinessUser";
}
<link href="~/css/quill.snow.css" rel="stylesheet">
<script src="~/js/quill.js"></script>
<script src="~/js/quill.min.js"></script>

<h1>EditBusinessUser</h1>

<h4>BusinessUserModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateBusinessUser" onsubmit="setContent()" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <div id="upload-photo">@Html.TextBoxFor(m => m.ImageFile, new { @type = "file", @class = "input-file" })</div>
                <div class="text-danger mt-1">@ViewBag.ImageError</div>
            </div>

            <div class="form-group">
                <input type="hidden" asp-for="Id" value="@Model.Id" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BusinessName" class="control-label"></label>
                <input asp-for="BusinessName" class="form-control" />
                <span asp-validation-for="BusinessName" class="text-danger"></span>

            </div>
            <div class="text-danger">@ViewBag.ErrorMessageBusinessName</div>
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="text-danger">@ViewBag.ErrorMessageUserName</div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="text-danger">@ViewBag.ErrorMessageEmail</div>
            <div class="form-group">
                <label asp-for="Info" class="control-label"></label>
                <input asp-for="Info" class="form-control" />
                <span asp-validation-for="Info" class="text-danger"></span>

                @*<label asp-for="Info" class="control-label"></label>
            <div class="text-dark" style="min-height:500px; width:100%;" id="editor"></div>
            @Html.TextBoxFor(m => m.Info, new { style = "display: none;", id = "content", value = "" })
            <span asp-validation-for="Info" class="text-danger"></span>*@

            </div>
            <div class="form-group">
                <label asp-for="Sector" class="control-label"></label>
                <input asp-for="Sector" class="form-control" />
                <span asp-validation-for="Sector" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="BusinessUserPage">Back to List</a>
</div>

<script>
    var toolbarOptions = [
        ['bold', 'italic', 'underline'],        // toggled buttons

        [{ 'list': 'ordered' }, { 'list': 'bullet' }],

        ['link', 'video']

    ];
    var options = {
        modules: {
            toolbar: toolbarOptions
        },
        placeholder: 'Schrijf hier informatie over uw bedrijf...',
        theme: 'snow'
    };
    var quill = new Quill('#editor', options);

    //var temp = '<h1>hello</h1>';
    //var contentString = temp.innerHTML;
    //var contentJSON = JSON.parse(contentString);
    //var HTML = quillGetHTML(contentJSON)

    //quill.setContents(temp);

    function setContent() {
        var delta = quill.getContents();
        var content = document.getElementById("content");
        content.value = JSON.stringify(delta);
    }

    function quillGetHTML(inputDelta) {
        var tempQuill = new Quill(document.createElement("div"));
        tempQuill.setContents(inputDelta);
        return tempQuill.root.innerHTML;
    }

</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
